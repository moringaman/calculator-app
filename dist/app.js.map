{"version":3,"sources":["calculator.js","app.js"],"names":["Calculator","input","rightArray","leftArray","operator","equation","previousResult","memoryPosition","result","isOperator","RegExp","test","push","join","length","val","Math","sqrt","parseInt","toFixed","answer","validateResult","left","right","eval","$","document","ready","calc","init","cacheDom","bindEvents","$screen","innerHTML","$info","$window","window","$calculator","$main","find","$header","getElementById","$numbers","$operators","$btnAc","$btnPlus","$btnMinus","$btnMultiply","$btnDivide","$btnEquals","$btnMem","$btnPi","$btnPoint","$btnRoot","$btn0","$btn1","$btn2","$btn3","$btn4","$btn5","$btn6","$btn7","$btn8","$btn9","on","pressKey","bind","clear","lastResult","evaluate","square","pi","x","data","target","value","newInput","display","memory"],"mappings":"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","file":"app.js","sourceRoot":"..","sourcesContent":["\nexport default class Calculator {\n  constructor(input) {\n    // initialize default variable values\n    this.rightArray = [] // right side of equation\n    this.leftArray = [] // lift side of equation\n    this.operator = '' \n    this.input = input\n    this.equation = ''\n    this.previousResult = 0\n    this.memoryPosition = 0\n    this.result = 0\n  }\n\n  newInput(input) {\n    // Check for an operator\n    let operatorCheck= new RegExp('[^.0-9]')  // TODO: Fix\n    let isOperator = operatorCheck.test(input)\n    if (isOperator) {\n      return this.operator = input\n    }\n    // If no operator set add value passed by btn to leftArray\n    if (this.operator === '') {\n      if (this.leftArray.length < 12) {\n          if ((this.leftArray.length == 9) && (input !== '.')) {\n            return this.leftArray.join('')\n          }\n      this.leftArray.push(input)\n      return this.equation = this.leftArray.join('')\n      }\n    } else {\n      // If an operator has already been passed pupulate rightArray\n      this.rightArray.push(input)\n      return this.equation = this.rightArray.join('')\n    }\n  }\n\n  square(val) {\n    return Math.sqrt(parseInt(val)).toFixed(11)\n  }\n  \n  pi() {\n    return 3.14159\n  }\n\n  evaluate() {\n    // send all parts of equation for validation and formatting\n   let answer = this.validateResult(this.leftArray.join(''), this.operator, this.rightArray.join(''))\n    return answer\n  }\n  // function to format results - can be called from anywhere for testing\n  validateResult(left, operator='', right='' ) {\n    this.result = eval(left + \" \" + operator + \" \" + right)\n    if (this.result > 999999999) return 'Err'\n    if (this.result % 1 != 0) return this.result.toFixed(2)\n    this.previousResult = this.result\n    return this.result\n  }\n\n  memory() {\n    return this.previousResult\n  }\n\n  clear() {\n    // reset all calulator variables back to the default\n    this.leftArray = []\n    this.rightArray = []\n    this.result = 0\n    this.operator = ''\n    return this.equation = \"\"\n  }\n\n}\n","\nimport Calculator from './calculator.js';\n\n($(document).ready(function() {\n\n\nconst calc = new Calculator\n// initialize application modules\nlet app = {\n  init: function() {\n  //  call cache dome element function\n  this.cacheDom()\n  // call bind events to dom element function\n  this.bindEvents()\n  // set initial display values\n  this.result = '0'\n  this.$screen.innerHTML = this.result \n  this.$info.innerHTML = ''\n  },\n  // cache dom elements\n  cacheDom: function() {\n    this.$window = $(window)\n    this.$calculator= $('#calculator')\n    this.$main = this.$calculator.find('#main')\n    this.$header = this.$calculator.find('#header')\n    this.$info = document.getElementById('info') \n    this.$screen = document.getElementById('screen') \n    this.$numbers = this.$main.find('#numbers')\n    this.$operators = this.$main.find('#operators')\n    this.$btnAc = this.$operators.find('#btn-ac')\n    this.$btnPlus = this.$operators.find('#btn-plus')\n    this.$btnMinus = this.$operators.find('#btn-minus')\n    this.$btnMultiply = this.$operators.find('#btn-multiply')\n    this.$btnDivide = this.$operators.find('#btn-divide')\n    this.$btnEquals = this.$operators.find('#btn-equals')\n    this.$btnMem = this.$operators.find('#btn-mem')\n    this.$btnPi= this.$operators.find('#btn-pi')\n    this.$btnPoint= this.$numbers.find('#btn-point')\n    this.$btnRoot = this.$numbers.find('#btn-root')\n    this.$btn0 = this.$numbers.find('#btn0')\n    this.$btn1 = this.$numbers.find('#btn1')\n    this.$btn2 = this.$numbers.find('#btn2')\n    this.$btn3 = this.$numbers.find('#btn3')\n    this.$btn4 = this.$numbers.find('#btn4')\n    this.$btn5 = this.$numbers.find('#btn5')\n    this.$btn6 = this.$numbers.find('#btn6')\n    this.$btn7 = this.$numbers.find('#btn7')\n    this.$btn8 = this.$numbers.find('#btn8')\n    this.$btn9 = this.$numbers.find('#btn9')\n  },\n\n  // Bind all dom element click events to app object\n\n  bindEvents: function() {\n    this.$btn0.on('click', this.pressKey.bind(this)) \n    this.$btn1.on('click', this.pressKey.bind(this)) \n    this.$btn2.on('click', this.pressKey.bind(this)) \n    this.$btn3.on('click', this.pressKey.bind(this)) \n    this.$btn4.on('click', this.pressKey.bind(this)) \n    this.$btn5.on('click', this.pressKey.bind(this)) \n    this.$btn6.on('click', this.pressKey.bind(this)) \n    this.$btn7.on('click', this.pressKey.bind(this)) \n    this.$btn8.on('click', this.pressKey.bind(this)) \n    this.$btn9.on('click', this.pressKey.bind(this)) \n    this.$btnAc.on('click', this.clear.bind(this)) \n    this.$btnPlus.on('click', this.pressKey.bind(this)) \n    this.$btnMinus.on('click', this.pressKey.bind(this)) \n    this.$btnMem.on('click', this.lastResult.bind(this))\n    this.$btnMultiply.on('click', this.pressKey.bind(this)) \n    this.$btnDivide.on('click', this.pressKey.bind(this)) \n    this.$btnPoint.on('click', this.pressKey.bind(this)) \n    this.$btnEquals.on('click', this.evaluate.bind(this)) \n    this.$btnRoot.on('click', this.square.bind(this)) \n    this.$btnPi.on('click', this.pi.bind(this)) \n  },\n\n  pressKey: function(x){\n    let data = x.target.value\n    // Call newInput method of calculator class instance\n    calc.newInput(data)\n    this.result = calc.equation\n    // Display the result on screen\n    this.display(calc.equation)\n    this.$info.innerHTML = calc.operator\n  },\n\n   evaluate: function() {\n    this.display(calc.evaluate())\n   },\n  \n  clear: function() {\n    calc.clear()\n    this.display('0') \n    this.$info.innerHTML = ''\n  },\n  \n  lastResult: function() {\n    this.display(calc.memory())\n  },\n\n  square: function() {\n     this.display(calc.square(this.result))\n  },\n\n  pi: function() {\n    this.display(calc.pi())\n  },\n\n  display: function(result) {\n    this.$screen.innerHTML = result\n  }\n\n}\n\napp.init()\n\n}))"]}